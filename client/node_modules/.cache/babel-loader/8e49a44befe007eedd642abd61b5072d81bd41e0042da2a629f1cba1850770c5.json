{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\a.kchaou1\\\\Desktop\\\\PFE\\\\tuto\\\\MERN-app-agents\\\\client\\\\src\\\\components\\\\IssuerHome\\\\IssueCredential.js\";\nimport React from \"react\";\n// import { Modal } from \"react-bootstrap\";\n// import Popup from \"reactjs-popup\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction IssueCredential() {\n  //   const [showModal, setShowModal] = useState(false);\n  //   const [attributes, setAttributes] = useState({\n  //     branchName: \"\",\n  //     branchManager: \"\",\n  //     address: \"\",\n  //     longitude: \"\",\n  //     latitude: \"\",\n  //   });\n  //   let onClose = () => {\n  //     setShowModal(false);\n  //   };\n  //   const handleChange = (e) => {\n  //     setAttributes(e.target.value);\n  //   };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        padding: \"20px\"\n      },\n      children: \"Hello Issuer, in order to legitimize this branch you need to follow these steps to issue the Verifiable Credential:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Step 1:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this), \" Click on \", /*#__PURE__*/_jsxDEV(\"i\", {\n          children: \"Create Schema\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 35\n        }, this), \" to define the structure of the Verifiable Credential you want to issue \\xA0\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Step 2:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this), \" Create the Credential Definition for the Specific Schema: this will allow you to create the necessary cryptographic keys for a secure information.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Step 3:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this), \" Issue Credential and Send it to the Holder which is the Branch you want to legitmize\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w3-container w3-card w3-padding w3-margin\",\n        style: {\n          float: \"left\",\n          width: \"31%\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Create Schema:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          method: \"POST\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Name of Schema: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"w3-input\",\n            name: \"name_of_schema\",\n            defaultValue: \"Branch Legitimate Identity\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Schema Version: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"w3-input\",\n            name: \"version\",\n            defaultValue: \"1.0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Please supply a JSON array of attributes:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            style: {\n              height: 100\n            },\n            className: \"w3-input\",\n            name: \"attributes\",\n            required: true,\n            defaultValue: '[\\n    \"BranchName\",\\n    \"BranchManager\",\\n    \"Location\"\\n ]'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"btn btn-light\",\n            onClick: ha,\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n_c = IssueCredential;\nexport default IssueCredential;\nvar _c;\n$RefreshReg$(_c, \"IssueCredential\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","IssueCredential","className","children","style","padding","fileName","_jsxFileName","lineNumber","columnNumber","float","width","method","type","name","defaultValue","height","required","onClick","ha","_c","$RefreshReg$"],"sources":["C:/Users/a.kchaou1/Desktop/PFE/tuto/MERN-app-agents/client/src/components/IssuerHome/IssueCredential.js"],"sourcesContent":["import React from \"react\";\r\n// import { Modal } from \"react-bootstrap\";\r\n// import Popup from \"reactjs-popup\";\r\n\r\nfunction IssueCredential() {\r\n  //   const [showModal, setShowModal] = useState(false);\r\n  //   const [attributes, setAttributes] = useState({\r\n  //     branchName: \"\",\r\n  //     branchManager: \"\",\r\n  //     address: \"\",\r\n  //     longitude: \"\",\r\n  //     latitude: \"\",\r\n  //   });\r\n  //   let onClose = () => {\r\n  //     setShowModal(false);\r\n  //   };\r\n  //   const handleChange = (e) => {\r\n  //     setAttributes(e.target.value);\r\n  //   };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h2 style={{ padding: \"20px\" }}>\r\n        Hello Issuer, in order to legitimize this branch you need to follow\r\n        these steps to issue the Verifiable Credential:\r\n      </h2>\r\n      <ul>\r\n        <li>\r\n          <b>Step 1:</b> Click on <i>Create Schema</i> to define the structure\r\n          of the Verifiable Credential you want to issue &nbsp;\r\n          {/* <button\r\n            type=\"button\"\r\n            className=\"btn btn-light\"\r\n            data-toggle=\"modal\"\r\n            onClick={() => {\r\n              setShowModal(true);\r\n            }}\r\n          >\r\n            Create Schema\r\n          </button>\r\n          {showModal && (\r\n            <Modal fullscreen=\"true\" show={showModal} onHide={onClose} centered>\r\n              <Popup\r\n                trigger={\r\n                  <div\r\n                    id=\"exampleModal\"\r\n                    role=\"dialog\"\r\n                    aria-labelledby=\"exampleModalLabel\"\r\n                    aria-hidden=\"true\"\r\n                    aria-modal=\"true\"\r\n                  >\r\n                    <div className=\"modal-dialog\" role=\"document\">\r\n                      <div className=\"modal-content\">\r\n                        <div className=\"modal-header\">\r\n                          <h5 className=\"modal-title\" id=\"exampleModalLabel\">\r\n                            Create a Schema to define criterias to be filled by\r\n                            branch\r\n                          </h5>\r\n                          <button\r\n                            type=\"button\"\r\n                            className=\"close\"\r\n                            onClick={() => {\r\n                              onClose();\r\n                            }}\r\n                            data-dismiss=\"modal\"\r\n                            aria-label=\"Close\"\r\n                          >\r\n                            <span aria-hidden=\"true\">&times;</span>\r\n                          </button>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                          <form>\r\n                            <div className=\"form-group\">\r\n                              <label\r\n                                htmlFor=\"recipient-name\"\r\n                                className=\"col-form-label\"\r\n                              >\r\n                                Attributes:\r\n                              </label>\r\n                              <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                id=\"recipient-name\"\r\n                                name=\"holder-did\"\r\n                                onChange={handleChange}\r\n                                value={attributes.branchName}\r\n                              />\r\n                              <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                id=\"recipient-name\"\r\n                                name=\"holder-did\"\r\n                                onChange={handleChange}\r\n                                value={attributes.address}\r\n                              />\r\n                            </div>\r\n                          </form>\r\n                        </div>\r\n                        <div className=\"modal-footer\">\r\n                          <button\r\n                            type=\"button\"\r\n                            className=\"btn btn-secondary\"\r\n                            data-dismiss=\"modal\"\r\n                            onClick={() => {\r\n                              onClose();\r\n                            }}\r\n                          >\r\n                            Close\r\n                          </button>\r\n                          <button\r\n                            type=\"button\"\r\n                            className=\"btn btn-primary\"\r\n                            // onClick={handleCreateSchema}\r\n                          >\r\n                            Send Invitation\r\n                          </button>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                }\r\n              ></Popup>\r\n            </Modal>\r\n          )} */}\r\n        </li>\r\n        <li>\r\n          <b>Step 2:</b> Create the Credential Definition for the Specific\r\n          Schema: this will allow you to create the necessary cryptographic keys\r\n          for a secure information.\r\n        </li>\r\n        <li>\r\n          <b>Step 3:</b> Issue Credential and Send it to the Holder which is the\r\n          Branch you want to legitmize\r\n        </li>\r\n      </ul>\r\n\r\n      <div className=\"container\">\r\n        <div\r\n          className=\"w3-container w3-card w3-padding w3-margin\"\r\n          style={{ float: \"left\", width: \"31%\" }}\r\n        >\r\n          <h3>Create Schema:</h3>\r\n          <form method=\"POST\">\r\n            <label>Name of Schema: </label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"w3-input\"\r\n              name=\"name_of_schema\"\r\n              defaultValue=\"Branch Legitimate Identity\"\r\n            />\r\n            <br />\r\n            <br />\r\n            <label>Schema Version: </label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"w3-input\"\r\n              name=\"version\"\r\n              defaultValue=\"1.0\"\r\n            />\r\n            <br />\r\n            <br />\r\n            <label>Please supply a JSON array of attributes:</label>\r\n            <br />\r\n            <br />\r\n            <textarea\r\n              style={{ height: 100 }}\r\n              className=\"w3-input\"\r\n              name=\"attributes\"\r\n              required\r\n              defaultValue={\r\n                '[\\n    \"BranchName\",\\n    \"BranchManager\",\\n    \"Location\"\\n ]'\r\n              }\r\n            />\r\n            <br />\r\n            <br />\r\n            <button type=\"button\" className=\"btn btn-light\" onClick={ha}>\r\n              Submit\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default IssueCredential;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}