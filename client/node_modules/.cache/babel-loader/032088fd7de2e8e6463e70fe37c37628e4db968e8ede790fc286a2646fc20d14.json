{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\a.kchaou1\\\\Desktop\\\\PFE\\\\tuto\\\\MERN-app-agents\\\\client\\\\src\\\\components\\\\IssuerHome\\\\IssueCredential.js\";\nimport React from \"react\";\nimport axios from \"axios\";\n// import { Modal } from \"react-bootstrap\";\n// import Popup from \"reactjs-popup\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction IssueCredential() {\n  const handleIssueCredential = () => {\n    //     axios\n    //   .post(\"http://localhost:3007/issue-credential\", {\n    //     did: did,\n    //     status: \"pending\",\n    //   })\n    //   .then((response) => {\n    //     console.log(response.data);\n    //   })\n    //   .catch((error) => {\n    //     console.error(error);\n    //   });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        padding: \"20px\"\n      },\n      children: \"Hello Issuer, in order to legitimize this branch you need to follow these steps to issue the Verifiable Credential:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleIssueCredential,\n      children: \"Issue Credential\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n_c = IssueCredential;\nexport default IssueCredential;\nvar _c;\n$RefreshReg$(_c, \"IssueCredential\");","map":{"version":3,"names":["React","axios","jsxDEV","_jsxDEV","IssueCredential","handleIssueCredential","className","children","style","padding","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/a.kchaou1/Desktop/PFE/tuto/MERN-app-agents/client/src/components/IssuerHome/IssueCredential.js"],"sourcesContent":["import React from \"react\";\r\nimport axios from \"axios\";\r\n// import { Modal } from \"react-bootstrap\";\r\n// import Popup from \"reactjs-popup\";\r\n\r\nfunction IssueCredential() {\r\n\r\n    const handleIssueCredential = () => {\r\n    //     axios\r\n    //   .post(\"http://localhost:3007/issue-credential\", {\r\n    //     did: did,\r\n    //     status: \"pending\",\r\n    //   })\r\n    //   .then((response) => {\r\n    //     console.log(response.data);\r\n    //   })\r\n    //   .catch((error) => {\r\n    //     console.error(error);\r\n    //   });\r\n    }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h2 style={{ padding: \"20px\" }}>\r\n        Hello Issuer, in order to legitimize this branch you need to follow\r\n        these steps to issue the Verifiable Credential:\r\n      </h2>\r\n      {/* <ul>\r\n        <li>\r\n          <b>Step 1:</b> Click on <i>Create Schema</i> to define the structure\r\n          of the Verifiable Credential you want to issue &nbsp;\r\n        </li>\r\n        <li>\r\n          <b>Step 2:</b> Create the Credential Definition for the Specific\r\n          Schema: this will allow you to create the necessary cryptographic keys\r\n          for a secure information.\r\n        </li>\r\n        <li>\r\n          <b>Step 3:</b> Issue Credential and Send it to the Holder which is the\r\n          Branch you want to legitmize\r\n        </li>\r\n      </ul> */}\r\n    <button onClick={handleIssueCredential}>Issue Credential</button>\r\n      \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default IssueCredential;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,MAAM,OAAO;AACzB;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,SAASC,eAAeA,CAAA,EAAG;EAEvB,MAAMC,qBAAqB,GAAGA,CAAA,KAAM;IACpC;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;EAAA,CACC;EAEH,oBACEF,OAAA;IAAKG,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACxBJ,OAAA;MAAIK,KAAK,EAAE;QAAEC,OAAO,EAAE;MAAO,CAAE;MAAAF,QAAA,EAAC;IAGhC;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAgBPV,OAAA;MAAQW,OAAO,EAAET,qBAAsB;MAAAE,QAAA,EAAC;IAAgB;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAE5D,CAAC;AAEV;AAACE,EAAA,GAzCQX,eAAe;AA2CxB,eAAeA,eAAe;AAAC,IAAAW,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}