{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\a.kchaou1\\\\Desktop\\\\PFE\\\\tuto\\\\MERN-app-agents\\\\client\\\\src\\\\components\\\\Register\\\\Register.js\",\n  _s = $RefreshSig$();\n/*Verifiable Credentials JS Library (@digitalbazaar/vc):\r\nA Javascript library for issuing and verifying Verifiable Credentials.\r\nnpm i @digitalbazaar/vc\r\n\r\nlinking the UI with the DID registartion\r\n\r\nEd25519Signature2020 suite (@digitalbazaar/ed25519-signature-2020): \r\nEd25519Signature2020 Linked Data Proof suite for use with jsonld-signatures.\r\nnpm install @digitalbazaar/ed25519-signature-2020\r\n\r\nthe package for the revocation list \r\nnpm install @digitalbazaar/vc-status-rl-2020 => it says that it is derecated, so we need to find alternatives\r\n\r\n\r\nSelective DID Resolver Client (@digitalbazaar/did-io):\r\nA DID (Decentralized Identifier) resolution library for Javascript.\r\nnpm i @digitalbazaar/did-io\r\n\r\nA DID (Decentralized Identifier) context library for JavaScript:\r\nThis project packages the DID Context from the DID specification for use with Node.js and web apps.\r\nnpm install did-context\r\n\r\n*/\n\nimport React, { useState } from \"react\";\n// libraries importation\n\n//import { Ed25519Signature2020 } from \"@digitalbazaar/ed25519-signature-2020\";\n// import { issue, verify } from \"@digitalbazaar/vc\";\n// import { createRevocationList } from \"@digitalbazaar/vc-revocation-list\";\n// import { contexts } from \"@digitalbazaar/did-context\";\n// import { Ed25519VerificationKey2018 } from \"@digitalbazaar/ed25519-verification-key-2018\";\n// import { Ed25519KeyPair } from \"@digitalbazaar/ed25519-key-pair\";\n// import { didFromKey } from \"@digitalbazaar/did-io\";\n\n// public and private key creation\n// const crypto = require('crypto');\n\n// //Generate a new key pair\n// const { publicKey, privateKey } = crypto.generateKeyPairSync('ed25519', {\n//   // Recommended key length for ed25519 is 256 bits (32 bytes)\n//   modulusLength: 256,\n// });\n\n// // Export the keys in PEM format\n// const publicKeyPem = publicKey.export({\n//   type: 'spki',\n//   format: 'pem',\n// }).toString();\n// const privateKeyPem = privateKey.export({\n//   type: 'pkcs8',\n//   format: 'pem',\n// }).toString();\n\n// // Store the keys somewhere secure\n// // For simplicity, we'll just log them to the console\n// console.log('Public key:', publicKeyPem);\n// console.log('Private key:', privateKeyPem);\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Register() {\n  _s();\n  // const [name, setName] = useState(\"\");\n  // const [role, setRole] = useState(\"\");\n  // const [password, setPassword] = useState(\"\");\n\n  const [user, setUser] = useState({\n    username: \"\",\n    userRole: \"\",\n    password: \"\"\n  });\n  const handleChange = e => {\n    // e.preventDefault();\n    const {\n      name,\n      value\n    } = e.target;\n    setUser({\n      ...user,\n      //spread operator used because we put the user state as an object, so we need to spread it to ba able to use it: e.g. user.username, user.password\n      [name]: value\n    });\n  };\n  function handleSubmit(e) {\n    e.preventDefault();\n    // console.log(\"mrigel\");\n    //     // TODO: Submit the registration form data to the server\n\n    //     // clear up the field after submission\n\n    if (user.userRole == \"Admin\" && secretKey != \"AdarshT\") {\n      e.preventDefault();\n      alert(\"Invalid Admin\");\n    } else {\n      e.preventDefault();\n      console.log(fname, lname, email, password);\n      fetch(\"http://localhost:5000/register\", {\n        method: \"POST\",\n        crossDomain: true,\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Accept: \"application/json\",\n          \"Access-Control-Allow-Origin\": \"*\"\n        },\n        body: JSON.stringify({\n          fname,\n          email,\n          lname,\n          password,\n          userType\n        })\n      }).then(res => res.json()).then(data => {\n        console.log(data, \"userRegister\");\n        if (data.status == \"ok\") {\n          alert(\"Registration Successful\");\n        } else {\n          alert(\"Something went wrong\");\n        }\n      });\n    }\n    setUser({\n      username: \"\",\n      userRole: \"\",\n      password: \"\"\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"formDisplay\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Register To Use Soverify solution\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Get a Hold on Your DID to Use Soverify\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"exampleInputUserName\",\n          className: \"form-label\",\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          id: \"exampleInputUserName\",\n          \"aria-describedby\": \"nameLabel\",\n          name: \"username\",\n          value: user.username,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"exampleInputUserRole\",\n          className: \"form-label\",\n          children: \"User Role\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          className: \"form-select\",\n          \"aria-label\": \".form-select-sm example\",\n          name: \"userRole\",\n          onChange: handleChange,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            selected: true,\n            children: \"Open this to select your role\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: user.userRole,\n            children: \"Issuer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: user.userRole,\n            children: \"Holder\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"exampleInputPassword\",\n          className: \"form-label\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          className: \"form-control\",\n          id: \"exampleInputPassword\",\n          \"aria-describedby\": \"password\",\n          name: \"password\",\n          value: user.password,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary\",\n        children: \"Register Now\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 125,\n    columnNumber: 5\n  }, this);\n}\n_s(Register, \"jGyHmovdtJrkEuI5rBfiD0Me5Kc=\");\n_c = Register;\nexport default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Register","_s","user","setUser","username","userRole","password","handleChange","e","name","value","target","handleSubmit","preventDefault","secretKey","alert","console","log","fname","lname","email","fetch","method","crossDomain","headers","Accept","body","JSON","stringify","userType","then","res","json","data","status","children","className","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","id","onChange","selected","_c","$RefreshReg$"],"sources":["C:/Users/a.kchaou1/Desktop/PFE/tuto/MERN-app-agents/client/src/components/Register/Register.js"],"sourcesContent":["/*Verifiable Credentials JS Library (@digitalbazaar/vc):\r\nA Javascript library for issuing and verifying Verifiable Credentials.\r\nnpm i @digitalbazaar/vc\r\n\r\nlinking the UI with the DID registartion\r\n\r\nEd25519Signature2020 suite (@digitalbazaar/ed25519-signature-2020): \r\nEd25519Signature2020 Linked Data Proof suite for use with jsonld-signatures.\r\nnpm install @digitalbazaar/ed25519-signature-2020\r\n\r\nthe package for the revocation list \r\nnpm install @digitalbazaar/vc-status-rl-2020 => it says that it is derecated, so we need to find alternatives\r\n\r\n\r\nSelective DID Resolver Client (@digitalbazaar/did-io):\r\nA DID (Decentralized Identifier) resolution library for Javascript.\r\nnpm i @digitalbazaar/did-io\r\n\r\nA DID (Decentralized Identifier) context library for JavaScript:\r\nThis project packages the DID Context from the DID specification for use with Node.js and web apps.\r\nnpm install did-context\r\n\r\n*/\r\n\r\nimport React, { useState } from \"react\";\r\n// libraries importation\r\n\r\n//import { Ed25519Signature2020 } from \"@digitalbazaar/ed25519-signature-2020\";\r\n// import { issue, verify } from \"@digitalbazaar/vc\";\r\n// import { createRevocationList } from \"@digitalbazaar/vc-revocation-list\";\r\n// import { contexts } from \"@digitalbazaar/did-context\";\r\n// import { Ed25519VerificationKey2018 } from \"@digitalbazaar/ed25519-verification-key-2018\";\r\n// import { Ed25519KeyPair } from \"@digitalbazaar/ed25519-key-pair\";\r\n// import { didFromKey } from \"@digitalbazaar/did-io\";\r\n\r\n// public and private key creation\r\n// const crypto = require('crypto');\r\n\r\n// //Generate a new key pair\r\n// const { publicKey, privateKey } = crypto.generateKeyPairSync('ed25519', {\r\n//   // Recommended key length for ed25519 is 256 bits (32 bytes)\r\n//   modulusLength: 256,\r\n// });\r\n\r\n// // Export the keys in PEM format\r\n// const publicKeyPem = publicKey.export({\r\n//   type: 'spki',\r\n//   format: 'pem',\r\n// }).toString();\r\n// const privateKeyPem = privateKey.export({\r\n//   type: 'pkcs8',\r\n//   format: 'pem',\r\n// }).toString();\r\n\r\n// // Store the keys somewhere secure\r\n// // For simplicity, we'll just log them to the console\r\n// console.log('Public key:', publicKeyPem);\r\n// console.log('Private key:', privateKeyPem);\r\n\r\nfunction Register() {\r\n  // const [name, setName] = useState(\"\");\r\n  // const [role, setRole] = useState(\"\");\r\n  // const [password, setPassword] = useState(\"\");\r\n\r\n  const [user,setUser] = useState({\r\n    username:\"\",\r\n    userRole:\"\",\r\n    password: \"\"\r\n})\r\n\r\nconst handleChange = e =>{\r\n  // e.preventDefault();\r\n  const {name,value} = e.target\r\n  setUser({\r\n  ...user,//spread operator used because we put the user state as an object, so we need to spread it to ba able to use it: e.g. user.username, user.password\r\n  [name]:value\r\n  })\r\n  }\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n// console.log(\"mrigel\");\r\n//     // TODO: Submit the registration form data to the server\r\n\r\n//     // clear up the field after submission\r\n    \r\nif (user.userRole == \"Admin\" && secretKey != \"AdarshT\") {\r\n  e.preventDefault();\r\n  alert(\"Invalid Admin\");\r\n} else {\r\n  e.preventDefault();\r\n\r\n  console.log(fname, lname, email, password);\r\n  fetch(\"http://localhost:5000/register\", {\r\n    method: \"POST\",\r\n    crossDomain: true,\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Accept: \"application/json\",\r\n      \"Access-Control-Allow-Origin\": \"*\",\r\n    },\r\n    body: JSON.stringify({\r\n      fname,\r\n      email,\r\n      lname,\r\n      password,\r\n      userType,\r\n    }),\r\n  })\r\n    .then((res) => res.json())\r\n    .then((data) => {\r\n      console.log(data, \"userRegister\");\r\n      if (data.status == \"ok\") {\r\n        alert(\"Registration Successful\");\r\n      } else {\r\n        alert(\"Something went wrong\");\r\n      }\r\n    });\r\n}\r\n\r\n    setUser({ username: \"\", userRole: \"\", password: \"\" });\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <form className=\"formDisplay\" onSubmit={handleSubmit}>\r\n        <h2>Register To Use Soverify solution</h2>\r\n        <h3>Get a Hold on Your DID to Use Soverify</h3>\r\n\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"exampleInputUserName\" className=\"form-label\">\r\n            Name\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            id=\"exampleInputUserName\"\r\n            aria-describedby=\"nameLabel\"\r\n            name=\"username\"\r\n            value={user.username}\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"exampleInputUserRole\" className=\"form-label\">\r\n            User Role\r\n          </label>\r\n          {/* <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            id=\"exampleInputUserRole\"\r\n            aria-describedby=\"userRole\"\r\n            value={role}\r\n            onChange={(event) => setRole(event.target.value)}\r\n          /> */}\r\n          <select\r\n            className=\"form-select\"\r\n            aria-label=\".form-select-sm example\"\r\n            name=\"userRole\"\r\n            onChange={handleChange}\r\n          >\r\n            <option selected>Open this to select your role</option>\r\n            <option value={user.userRole}>Issuer</option>\r\n            <option value={user.userRole}>Holder</option>\r\n          </select>\r\n        </div>\r\n\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"exampleInputPassword\" className=\"form-label\">\r\n            Password\r\n          </label>\r\n          <input\r\n            type=\"password\"\r\n            className=\"form-control\"\r\n            id=\"exampleInputPassword\"\r\n            aria-describedby=\"password\"\r\n            name=\"password\"\r\n            value={user.password}\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n\r\n        <button type=\"submit\" className=\"btn btn-primary\">\r\n          Register Now\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Register;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}